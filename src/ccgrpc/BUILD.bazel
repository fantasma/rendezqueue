
alias(
    name = "grpc_cc_lib",
    actual = "@com_github_grpc_grpc//:grpc++",
)

cc_library(
    name = "rendezqueue_protobuf_impl_cc",
    srcs = [
        "rendezqueue_protobuf_impl.cc",
        "rendezqueue_protobuf_impl.hh",
        "swapstore.cc",
        "swapstore.hh",
    ],
    deps = [
        "//proto:rendezqueue_cc_proto",
        "@com_google_absl//absl/container:flat_hash_map",
    ],
    visibility = ["//test/scenario:__pkg__"],
)

cc_library(
    name = "ssl_cred_cc",
    srcs = [
        "ssl_cred.cc",
        "ssl_cred.hh",
    ],
    deps = [
        ":grpc_cc_lib",
    ],
    visibility = ["//test/scenario:__pkg__"],
)

cc_binary(
    name = "asyncserver",
    srcs = [
        "asyncserver.cc",
    ],
    deps = [
        ":grpc_cc_lib",
        ":rendezqueue_protobuf_impl_cc",
        ":ssl_cred_cc",
        "//proto:rendezqueue_cc_grpc",
        "@com_google_absl//absl/flags:parse",
    ],
)

cc_binary(
    name = "syncserver",
    srcs = [
        "syncserver.cc",
    ],
    deps = [
        ":grpc_cc_lib",
        ":rendezqueue_protobuf_impl_cc",
        ":ssl_cred_cc",
        "//proto:rendezqueue_cc_grpc",
        "@com_google_absl//absl/flags:parse",
    ],
)

cc_binary(
    name = "syncclient",
    srcs = [
        "syncclient.cc",
    ],
    deps = [
        ":grpc_cc_lib",
        ":ssl_cred_cc",
        "//proto:rendezqueue_cc_grpc",
        "@com_google_absl//absl/flags:parse",
    ],
)

